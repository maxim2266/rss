#!/bin/bash

set -e
set -o pipefail

# URL
URL=https://blog.cloudflare.com/

# download page
SRC="$(mktemp)"

trap 'rm -f "$SRC"' EXIT SIGTERM SIGINT SIGQUIT SIGHUP

hxnormalize -s -x -e -l 1000000 "$URL"	\
| hxselect -c article.post	\
| hxremove footer	\
> "$SRC"

# debug
#SRC=temp.html

# current timestamp
NOW="$(date --rfc-email)"

# header
cat <<EOF
<?xml version="1.0"?>
<rss version="2.0">
<channel>
<title>CloudFlare blog</title>
<link>$URL</link>
<description>CloudFlare blog</description>
<language>en-us</language>
<pubDate>$NOW</pubDate>
<lastBuildDate>$NOW</lastBuildDate>
<generator>$(basename "$0")</generator>

EOF

# helper functions
fix_text() {
	hxunent -bf | sed "s/&#x27;/'/g" | sed -E 's/[[:space:]]+/ /g'
}

fix_timestamp() {
	sed -E 's/([[:space:]]([[:digit:]]{1,2})(st|nd|rd|th),)/ \2,/'
}

take() {
	hxselect -c -s '\n' "$@" < "$SRC"
}

# process source file
paste -d '\n'	\
	<(take .post-header \> .title \> a | fix_text)	\
	<(take .post-header \> .title \> a::attr\(href\))	\
	<(take .post-excerpt \> p | fix_text | sed -E 's/\.+…/…/g')	\
	<(date --rfc-email -f <(take .meta \> time | fix_timestamp))	\
| nl -n ln -v 0	\
| while IFS=$'\t' read -r no line
do
	case $(($no % 4)) in
		0)	echo '<item>'
			echo '<title>'$line'</title>'
			;;
		1)	line=${URL%%'/'}/${line##'/'}
			echo '<link>'$line'</link>'
			echo '<guid>'$line'</guid>'
			;;
		2)	echo '<description>'$line'</description>'
			;;
		3)	echo '<pubDate>'$line'</pubDate>'
			echo '</item>'$'\n'
			;;
	esac
done

# close tags
echo "</channel></rss>"
